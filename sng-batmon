#!/usr/bin/env bash
function error_occured {
    
    notify-send -t 10000 -u critical sng-batmon "An error occured at execution time!!
    
Exiting..."
    control_c
}

function control_c {
    rm $my_fifo 2>/dev/null
    exit
}

trap control_c SIGINT
trap control_c SIGTERM
trap error_occured ERR

my_fifo=/tmp/sng-batmon

[ -p $my_fifo ] && exit
# make sure a battery is present
acpi_path=$(find /sys/class/power_supply/ -name 'BAT*' | head -1)
[ -z "$acpi_path" ] && exit 

mkfifo $my_fifo

#set -x
LOOP_TIME_OUT=60
while true;do
    if [ -e /etc/sng-batmon.conf ]; then
        . /etc/sng-batmon.conf
    fi
    if [ -e ~/.config/sng-batmon/config ]; then
        . ~/.config/sng-batmon/config
    fi

    # wait for input from FIFO
    # for LOOP_TIME_OUT sec (default=60)
    exec 3<>$my_fifo
    if read -t $LOOP_TIME_OUT -u 3 line; then
        if [ ! -z "$line" ];then
            if [ "$line" == "suspend" ];then
                SUSPEND=yes
            elif [ "$line" == "resume" ];then
                unset SUSPEND
            elif [ "$line" == "exit" ];then
                control_c
            fi
        fi
    fi

    for i in 3 4
    do
        [[ "${THRESHOLD_HIGH[$i]}" == /* ]] || THRESHOLD_HIGH[$i]=/usr/share/sng-batmon/"${THRESHOLD_HIGH[$i]}"
        [[ "${THRESHOLD_LOW[$i]}" == /* ]] || THRESHOLD_LOW[$i]=/usr/share/sng-batmon/"${THRESHOLD_LOW[$i]}"
        [[ "${THRESHOLD_NOTIFY_HIGH[$i]}" == /* ]] || THRESHOLD_NOTIFY_HIGH[$i]=/usr/share/sng-batmon/"${THRESHOLD_NOTIFY_HIGH[$i]}"
        [[ "${THRESHOLD_NOTIFY_LOW[$i]}" == /* ]] || THRESHOLD_NOTIFY_LOW[$i]=/usr/share/sng-batmon/"${THRESHOLD_NOTIFY_LOW[$i]}"
    done

    if [ -z "$SUSPEND" ]; then
        # keep dispalying notification
        #THRESHOLD_LOW_REACHED=yes
        #while [ ! -z "$THRESHOLD_LOW_REACHED" ];do
            acpi_path=$(find /sys/class/power_supply/ -name 'BAT*' | head -1)
            # make sure a battery is present
            [ -z "$acpi_path" ] && control_c
            charge_now=$(cat "$acpi_path/charge_now")
            charge_full=$(cat "$acpi_path/charge_full")
            charge_status=$(cat "$acpi_path/status")
            charge_percent=$(echo "$charge_now / $charge_full * 100" | bc -l)
            # remove everything after dot
            charge_percent=${charge_percent%.*}

            if [ $charge_status == 'Discharging' ];then

                LOOP_TIME_OUT=60
                if [[ $charge_percent -le ${THRESHOLD_HALT[0]} ]]; then
                    if [ ! -z "$HALT_COMMAND" ] ;then
                        rm $my_fifo
                        $HALT_COMMAND
                        control_c
                    fi
                elif [[ $charge_percent -le ${THRESHOLD_LOW[0]} ]]; then
                    LOOP_TIME_OUT=${THRESHOLD_LOW[6]}
                    notify-send -t ${THRESHOLD_LOW[5]} -i "${THRESHOLD_LOW[3]}" "${THRESHOLD_LOW[1]}" "${THRESHOLD_LOW[2]}"
                    if [ ! -z "$PLAYER_COMMAND" ] && [ -e "${THRESHOLD_LOW[4]}" ]; then
                        $PLAYER_COMMAND "${THRESHOLD_LOW[4]}"
                    fi
                elif [[ $charge_percent -le ${THRESHOLD_HIGH[0]} ]]; then
                    LOOP_TIME_OUT=${THRESHOLD_HIGH[6]}
                    notify-send -t ${THRESHOLD_HIGH[5]} -i "${THRESHOLD_HIGH[3]}" "${THRESHOLD_HIGH[1]}" "${THRESHOLD_HIGH[2]}"
                    if [ ! -z "$PLAYER_COMMAND" ] && [ -e "${THRESHOLD_HIGH[4]}" ]; then
                        $PLAYER_COMMAND "${THRESHOLD_HIGH[4]}"
                    fi
                elif [[ $charge_percent -le ${THRESHOLD_NOTIFY_LOW[0]} ]]; then
                    LOOP_TIME_OUT=${THRESHOLD_NOTIFY_LOW[6]}
                    notify-send -t ${THRESHOLD_NOTIFY_LOW[5]} -i "${THRESHOLD_NOTIFY_LOW[3]}" "${THRESHOLD_NOTIFY_LOW[1]}" "${THRESHOLD_NOTIFY_LOW[2]}"
                    if [ ! -z "$PLAYER_COMMAND" ] && [ -e "${THRESHOLD_NOTIFY_LOW[4]}" ]; then
                        $PLAYER_COMMAND "${THRESHOLD_NOTIFY_LOW[4]}"
                    fi
                elif [[ $charge_percent -ge ${THRESHOLD_NOTIFY_HIGH[0]} ]]; then
                    LOOP_TIME_OUT=${THRESHOLD_NOTIFY_HIGH[6]}
                    notify-send -t ${THRESHOLD_NOTIFY_HIGH[5]} -i "${THRESHOLD_NOTIFY_HIGH[3]}" "${THRESHOLD_NOTIFY_HIGH[1]}" "${THRESHOLD_NOTIFY_HIGH[2]}"
                    if [ ! -z "$PLAYER_COMMAND" ] && [ -e "${THRESHOLD_NOTIFY_HIGH[4]}" ]; then
                        $PLAYER_COMMAND "${THRESHOLD_NOTIFY_HIGH[4]}"
                    fi
                fi

                ## do i have to stop notification?
                #if [[ $charge_percent -ge ${THRESHOLD_LOW[0]} ]]; then
                #    unset THRESHOLD_LOW_REACHED
                #fi
            fi
        #done
    fi
done

rm $my_fifo 2>/dev/null

